{
    "CVE-ID": "CVE-2025-21709",
    "NVD": {
        "Descriptions": "In the Linux kernel, the following vulnerability has been resolved:\n\nkernel: be more careful about dup_mmap() failures and uprobe registering\n\nIf a memory allocation fails during dup_mmap(), the maple tree can be left\nin an unsafe state for other iterators besides the exit path.  All the\nlocks are dropped before the exit_mmap() call (in mm/mmap.c), but the\nincomplete mm_struct can be reached through (at least) the rmap finding\nthe vmas which have a pointer back to the mm_struct.\n\nUp to this point, there have been no issues with being able to find an\nmm_struct that was only partially initialised.  Syzbot was able to make\nthe incomplete mm_struct fail with recent forking changes, so it has been\nproven unsafe to use the mm_struct that hasn't been initialised, as\nreferenced in the link below.\n\nAlthough 8ac662f5da19f (\"fork: avoid inappropriate uprobe access to\ninvalid mm\") fixed the uprobe access, it does not completely remove the\nrace.\n\nThis patch sets the MMF_OOM_SKIP to avoid the iteration of the vmas on the\noom side (even though this is extremely unlikely to be selected as an oom\nvictim in the race window), and sets MMF_UNSTABLE to avoid other potential\nusers from using a partially initialised mm_struct.\n\nWhen registering vmas for uprobe, skip the vmas in an mm that is marked\nunstable.  Modifying a vma in an unstable mm may cause issues if the mm\nisn't fully initialised.",
        "Cvss2_BaseScore": 0,
        "Cvss3_BaseScore": 5.5,
        "Cvss2_VectorString": "",
        "Cvss3_VectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
        "CPEs": [
            {
                "URI": "cpe:/o:linux:linux_kernel",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "6.8",
                "VersionEndExcluding": "6.13.2",
                "VersionEndIncluding": ""
            }
        ]
    },
    "Official": {
        "6.13.2": {
            "source": [
                "https://www.kernel.org/pub//linux/kernel/v6.x/ChangeLog-6.13.2"
            ]
        },
        "6.14": {
            "source": [
                "https://www.kernel.org/pub//linux/kernel/v6.x/ChangeLog-6.14"
            ]
        },
        "commit": {
            "kernel: be more careful about dup_mmap() failures and uprobe registering": [
                {
                    "description": "kernel: be more careful about dup_mmap() failures and uprobe registering",
                    "commit": "da139948aeda677ac09cc0e7d837f8a314de7d55",
                    "source": "https://www.kernel.org/pub//linux/kernel/v6.x/ChangeLog-6.13.2",
                    "version": "6.13.2",
                    "upstream_commit": "64c37e134b120fb462fb4a80694bfb8e7be77b14",
                    "fixed": [
                        {
                            "fixed_commit": "d24062914837",
                            "fixed_commit_source": "https://www.kernel.org/pub//linux/kernel/v6.x/ChangeLog-6.8",
                            "fixed_commit_version": "6.8",
                            "fixed_commit_upstream_commit": []
                        }
                    ]
                },
                {
                    "description": "kernel: be more careful about dup_mmap() failures and uprobe registering",
                    "commit": "64c37e134b120fb462fb4a80694bfb8e7be77b14",
                    "source": "https://www.kernel.org/pub//linux/kernel/v6.x/ChangeLog-6.14",
                    "version": "6.14",
                    "upstream_commit": "",
                    "fixed": [
                        {
                            "fixed_commit": "d24062914837",
                            "fixed_commit_source": "https://www.kernel.org/pub//linux/kernel/v6.x/ChangeLog-6.8",
                            "fixed_commit_version": "6.8",
                            "fixed_commit_upstream_commit": []
                        }
                    ]
                }
            ]
        }
    }
}