{
    "CVE-ID": "CVE-2022-49201",
    "NVD": {
        "Descriptions": "In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: fix race between xmit and reset\n\nThere is a race between reset and the transmit paths that can lead to\nibmvnic_xmit() accessing an scrq after it has been freed in the reset\npath. It can result in a crash like:\n\n\tKernel attempted to read user page (0) - exploit attempt? (uid: 0)\n\tBUG: Kernel NULL pointer dereference on read at 0x00000000\n\tFaulting instruction address: 0xc0080000016189f8\n\tOops: Kernel access of bad area, sig: 11 [#1]\n\t...\n\tNIP [c0080000016189f8] ibmvnic_xmit+0x60/0xb60 [ibmvnic]\n\tLR [c000000000c0046c] dev_hard_start_xmit+0x11c/0x280\n\tCall Trace:\n\t[c008000001618f08] ibmvnic_xmit+0x570/0xb60 [ibmvnic] (unreliable)\n\t[c000000000c0046c] dev_hard_start_xmit+0x11c/0x280\n\t[c000000000c9cfcc] sch_direct_xmit+0xec/0x330\n\t[c000000000bfe640] __dev_xmit_skb+0x3a0/0x9d0\n\t[c000000000c00ad4] __dev_queue_xmit+0x394/0x730\n\t[c008000002db813c] __bond_start_xmit+0x254/0x450 [bonding]\n\t[c008000002db8378] bond_start_xmit+0x40/0xc0 [bonding]\n\t[c000000000c0046c] dev_hard_start_xmit+0x11c/0x280\n\t[c000000000c00ca4] __dev_queue_xmit+0x564/0x730\n\t[c000000000cf97e0] neigh_hh_output+0xd0/0x180\n\t[c000000000cfa69c] ip_finish_output2+0x31c/0x5c0\n\t[c000000000cfd244] __ip_queue_xmit+0x194/0x4f0\n\t[c000000000d2a3c4] __tcp_transmit_skb+0x434/0x9b0\n\t[c000000000d2d1e0] __tcp_retransmit_skb+0x1d0/0x6a0\n\t[c000000000d2d984] tcp_retransmit_skb+0x34/0x130\n\t[c000000000d310e8] tcp_retransmit_timer+0x388/0x6d0\n\t[c000000000d315ec] tcp_write_timer_handler+0x1bc/0x330\n\t[c000000000d317bc] tcp_write_timer+0x5c/0x200\n\t[c000000000243270] call_timer_fn+0x50/0x1c0\n\t[c000000000243704] __run_timers.part.0+0x324/0x460\n\t[c000000000243894] run_timer_softirq+0x54/0xa0\n\t[c000000000ea713c] __do_softirq+0x15c/0x3e0\n\t[c000000000166258] __irq_exit_rcu+0x158/0x190\n\t[c000000000166420] irq_exit+0x20/0x40\n\t[c00000000002853c] timer_interrupt+0x14c/0x2b0\n\t[c000000000009a00] decrementer_common_virt+0x210/0x220\n\t--- interrupt: 900 at plpar_hcall_norets_notrace+0x18/0x2c\n\nThe immediate cause of the crash is the access of tx_scrq in the following\nsnippet during a reset, where the tx_scrq can be either NULL or an address\nthat will soon be invalid:\n\n\tibmvnic_xmit()\n\t{\n\t\t...\n\t\ttx_scrq = adapter->tx_scrq[queue_num];\n\t\ttxq = netdev_get_tx_queue(netdev, queue_num);\n\t\tind_bufp = &tx_scrq->ind_buf;\n\n\t\tif (test_bit(0, &adapter->resetting)) {\n\t\t...\n\t}\n\nBut beyond that, the call to ibmvnic_xmit() itself is not safe during a\nreset and the reset path attempts to avoid this by stopping the queue in\nibmvnic_cleanup(). However just after the queue was stopped, an in-flight\nibmvnic_complete_tx() could have restarted the queue even as the reset is\nprogressing.\n\nSince the queue was restarted we could get a call to ibmvnic_xmit() which\ncan then access the bad tx_scrq (or other fields).\n\nWe cannot however simply have ibmvnic_complete_tx() check the ->resetting\nbit and skip starting the queue. This can race at the \"back-end\" of a good\nreset which just restarted the queue but has not cleared the ->resetting\nbit yet. If we skip restarting the queue due to ->resetting being true,\nthe queue would remain stopped indefinitely potentially leading to transmit\ntimeouts.\n\nIOW ->resetting is too broad for this purpose. Instead use a new flag\nthat indicates whether or not the queues are active. Only the open/\nreset paths control when the queues are active. ibmvnic_complete_tx()\nand others wake up the queue only if the queue is marked active.\n\nSo we will have:\n\tA. reset/open thread in ibmvnic_cleanup() and __ibmvnic_open()\n\n\t\t->resetting = true\n\t\t->tx_queues_active = false\n\t\tdisable tx queues\n\t\t...\n\t\t->tx_queues_active = true\n\t\tstart tx queues\n\n\tB. Tx interrupt in ibmvnic_complete_tx():\n\n\t\tif (->tx_queues_active)\n\t\t\tnetif_wake_subqueue();\n\nTo ensure that ->tx_queues_active and state of the queues are consistent,\nwe need a lock which:\n\n\t- must also be taken in the interrupt path (ibmvnic_complete_tx())\n\t- shared across the multiple\n---truncated---",
        "Cvss2_BaseScore": 0,
        "Cvss3_BaseScore": 4.7,
        "Cvss2_VectorString": "",
        "Cvss3_VectorString": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H",
        "CPEs": [
            {
                "URI": "cpe:/o:linux:linux_kernel",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "5.16",
                "VersionEndExcluding": "5.16.19",
                "VersionEndIncluding": ""
            },
            {
                "URI": "cpe:/o:linux:linux_kernel",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "5.17",
                "VersionEndExcluding": "5.17.2",
                "VersionEndIncluding": ""
            },
            {
                "URI": "cpe:/o:linux:linux_kernel",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "5.4",
                "VersionEndExcluding": "5.15.33",
                "VersionEndIncluding": ""
            }
        ]
    },
    "Official": {
        "5.15.33": {
            "source": [
                "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.15.33"
            ]
        },
        "5.16.19": {
            "source": [
                "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.16.19"
            ]
        },
        "5.17.2": {
            "source": [
                "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.17.2"
            ]
        },
        "5.18": {
            "source": [
                "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.18"
            ]
        },
        "commit": {
            "ibmvnic: fix race between xmit and reset": [
                {
                    "description": "ibmvnic: fix race between xmit and reset",
                    "commit": "1bd58abf595b6cf1ba6dd47ec887c4c009155fc9",
                    "source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.15.33",
                    "version": "5.15.33",
                    "upstream_commit": "4219196d1f662cb10a462eb9e076633a3fc31a15",
                    "fixed": [
                        {
                            "fixed_commit": "7ed5b31f4a66",
                            "fixed_commit_source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.4",
                            "fixed_commit_version": "5.4",
                            "fixed_commit_upstream_commit": []
                        }
                    ]
                },
                {
                    "description": "ibmvnic: fix race between xmit and reset",
                    "commit": "475f9cce98b63bc145b4efa66fa51175d4cb345f",
                    "source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.16.19",
                    "version": "5.16.19",
                    "upstream_commit": "4219196d1f662cb10a462eb9e076633a3fc31a15",
                    "fixed": [
                        {
                            "fixed_commit": "7ed5b31f4a66",
                            "fixed_commit_source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.4",
                            "fixed_commit_version": "5.4",
                            "fixed_commit_upstream_commit": []
                        }
                    ]
                },
                {
                    "description": "ibmvnic: fix race between xmit and reset",
                    "commit": "8507c6ade73cdbbbda5c3d31d67f52f2e1cf03fe",
                    "source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.17.2",
                    "version": "5.17.2",
                    "upstream_commit": "4219196d1f662cb10a462eb9e076633a3fc31a15",
                    "fixed": [
                        {
                            "fixed_commit": "7ed5b31f4a66",
                            "fixed_commit_source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.4",
                            "fixed_commit_version": "5.4",
                            "fixed_commit_upstream_commit": []
                        }
                    ]
                },
                {
                    "description": "ibmvnic: fix race between xmit and reset",
                    "commit": "4219196d1f662cb10a462eb9e076633a3fc31a15",
                    "source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.18",
                    "version": "5.18",
                    "upstream_commit": "",
                    "fixed": [
                        {
                            "fixed_commit": "7ed5b31f4a66",
                            "fixed_commit_source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.4",
                            "fixed_commit_version": "5.4",
                            "fixed_commit_upstream_commit": []
                        }
                    ]
                }
            ]
        }
    }
}