{
    "CVE-ID": "CVE-2021-47608",
    "NVD": {
        "Descriptions": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix kernel address leakage in atomic fetch\n\nThe change in commit 37086bfdc737 (\"bpf: Propagate stack bounds to registers\nin atomics w/ BPF_FETCH\") around check_mem_access() handling is buggy since\nthis would allow for unprivileged users to leak kernel pointers. For example,\nan atomic fetch/and with -1 on a stack destination which holds a spilled\npointer will migrate the spilled register type into a scalar, which can then\nbe exported out of the program (since scalar != pointer) by dumping it into\na map value.\n\nThe original implementation of XADD was preventing this situation by using\na double call to check_mem_access() one with BPF_READ and a subsequent one\nwith BPF_WRITE, in both cases passing -1 as a placeholder value instead of\nregister as per XADD semantics since it didn't contain a value fetch. The\nBPF_READ also included a check in check_stack_read_fixed_off() which rejects\nthe program if the stack slot is of __is_pointer_value() if dst_regno < 0.\nThe latter is to distinguish whether we're dealing with a regular stack spill/\nfill or some arithmetical operation which is disallowed on non-scalars, see\nalso 6e7e63cbb023 (\"bpf: Forbid XADD on spilled pointers for unprivileged\nusers\") for more context on check_mem_access() and its handling of placeholder\nvalue -1.\n\nOne minimally intrusive option to fix the leak is for the BPF_FETCH case to\ninitially check the BPF_READ case via check_mem_access() with -1 as register,\nfollowed by the actual load case with non-negative load_reg to propagate\nstack bounds to registers.",
        "Cvss2_BaseScore": 0,
        "Cvss3_BaseScore": 5.5,
        "Cvss2_VectorString": "",
        "Cvss3_VectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
        "CPEs": [
            {
                "URI": "cpe:/o:linux:linux_kernel:5.16:rc5",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:5.16:rc5:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "",
                "VersionEndExcluding": "",
                "VersionEndIncluding": ""
            },
            {
                "URI": "cpe:/o:linux:linux_kernel:5.16:rc4",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:5.16:rc4:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "",
                "VersionEndExcluding": "",
                "VersionEndIncluding": ""
            },
            {
                "URI": "cpe:/o:linux:linux_kernel:5.16:rc3",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:5.16:rc3:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "",
                "VersionEndExcluding": "",
                "VersionEndIncluding": ""
            },
            {
                "URI": "cpe:/o:linux:linux_kernel:5.16:rc2",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:5.16:rc2:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "",
                "VersionEndExcluding": "",
                "VersionEndIncluding": ""
            },
            {
                "URI": "cpe:/o:linux:linux_kernel:5.16:rc1",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:5.16:rc1:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "",
                "VersionEndExcluding": "",
                "VersionEndIncluding": ""
            },
            {
                "URI": "cpe:/o:linux:linux_kernel",
                "FormattedString": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "5.12",
                "VersionEndExcluding": "5.15.11",
                "VersionEndIncluding": ""
            }
        ]
    },
    "Official": {
        "5.15.11": {
            "source": [
                "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.15.11"
            ]
        },
        "5.16": {
            "source": [
                "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.16"
            ]
        },
        "commit": {
            "bpf: Fix kernel address leakage in atomic fetch": [
                {
                    "description": "bpf: Fix kernel address leakage in atomic fetch",
                    "commit": "423628125a484538111c2c6d9bb1588eb086053b",
                    "source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.15.11",
                    "version": "5.15.11",
                    "upstream_commit": "7d3baf0afa3aa9102d6a521a8e4c41888bb79882",
                    "fixed": [
                        {
                            "fixed_commit": "37086bfdc737",
                            "fixed_commit_source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.12",
                            "fixed_commit_version": "5.12",
                            "fixed_commit_upstream_commit": []
                        }
                    ]
                },
                {
                    "description": "bpf: Fix kernel address leakage in atomic fetch",
                    "commit": "7d3baf0afa3aa9102d6a521a8e4c41888bb79882",
                    "source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.16",
                    "version": "5.16",
                    "upstream_commit": "",
                    "fixed": [
                        {
                            "fixed_commit": "37086bfdc737",
                            "fixed_commit_source": "https://www.kernel.org/pub//linux/kernel/v5.x/ChangeLog-5.12",
                            "fixed_commit_version": "5.12",
                            "fixed_commit_upstream_commit": []
                        }
                    ]
                }
            ]
        }
    }
}