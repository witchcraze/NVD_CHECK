{
    "CVE-ID": "CVE-2022-41716",
    "NVD": {
        "Descriptions": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
        "Cvss2_BaseScore": 0,
        "Cvss3_BaseScore": 7.5,
        "Cvss2_VectorString": "",
        "Cvss3_VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
        "CPEs": [
            {
                "URI": "cpe:/a:golang:go",
                "FormattedString": "cpe:2.3:a:golang:go:*:*:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "",
                "VersionEndExcluding": "1.18.8",
                "VersionEndIncluding": ""
            },
            {
                "URI": "cpe:/a:golang:go",
                "FormattedString": "cpe:2.3:a:golang:go:*:*:*:*:*:*:*:*",
                "VersionStartExcluding": "",
                "VersionStartIncluding": "1.19.0",
                "VersionEndExcluding": "1.19.3",
                "VersionEndIncluding": ""
            }
        ]
    },
    "Official": {
        "1.20": {
            "source": {
                "56284": "https://github.com/golang/go/issues/56284"
            }
        },
        "1.19.3": {
            "source": {
                "56328": "https://github.com/golang/go/issues/56328"
            }
        },
        "1.18.8": {
            "source": {
                "56327": "https://github.com/golang/go/issues/56327"
            }
        }
    }
}